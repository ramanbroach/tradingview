//@version=5
indicator("Raman's - Candlestick Patterns version 2", overlay=true, shorttitle="RamanCP v2")

// User settings for pattern sensitivity
sensitivity = input.float(title="Doji Tolerance (%)", defval=0.1, minval=0.01, step=0.01) * 0.01
bodyRatio   = input.float(title="Body Ratio for patterns", defval=0.5, minval=0.1, step=0.1)

// Helper function: absolute value difference
f_abs_diff(x, y) => math.abs(x - y)

// Calculate candle parts
candleBody = math.abs(close - open)
upperShadow = high - math.max(open, close)
lowerShadow = math.min(open, close) - low

// Doji detection: when the body is very small compared to range
doji = candleBody <= (high - low) * sensitivity

// Hammer & Hanging Man: small body, little upper shadow, long lower shadow
isHammer = (upperShadow <= candleBody * bodyRatio) and (lowerShadow >= candleBody * 2)
hammerBodyPosition = (close >= open) ? "Bullish" : "Bearish"  // hammer style, but context matters

// Inverted Hammer & Shooting Star: small body, little lower shadow, long upper shadow
isInvertedHammer = (lowerShadow <= candleBody * bodyRatio) and (upperShadow >= candleBody * 2)
invertedBodyPosition = (close >= open) ? "Bullish" : "Bearish"

// Engulfing Patterns: compare current candle to previous candle
bullishEngulfing = (open[1] > close[1]) and (close > open) and (open < close[1]) and (close > open[1])
bearishEngulfing = (open[1] < close[1]) and (close < open) and (open > close[1]) and (close < open[1])

// Piercing Pattern: previous red candle followed by a bullish candle opening lower and closing above midpoint of previous body.
piercing = (open[1] > close[1]) and (open < close[1]) and (close > (open[1] + close[1]) / 2) and (close < open[1])

// Dark Cloud Cover: previous bullish candle followed by a bearish candle opening above previous high and closing below midpoint.
darkCloud = (open[1] < close[1]) and (open > close[1]) and (close < (open[1] + close[1]) / 2) and (close > open[1])

// Morning Star & Evening Star
// For stars, we need three candles. The middle one (star) should have a small body.
starThreshold = (high - low) * sensitivity

morningStar = (bar_index >= 2) and (close[2] < open[2]) and (doji[1] or f_abs_diff(open[1], close[1]) <= starThreshold) and (close > open) and (close > ((open[2] + close[2]) / 2))
eveningStar = (bar_index >= 2) and (close[2] > open[2]) and (doji[1] or f_abs_diff(open[1], close[1]) <= starThreshold) and (close < open) and (close < ((open[2] + close[2]) / 2))

// Labeling on chart
var label lbl = na

// Clear previous labels (optional: you can comment this out if you want to keep history)
// if (lbl)
//     label.delete(lbl)

// Function to plot a label at the candle's high with pattern name
plotLabel(pattern, condition, ylocValue) =>
    if condition
        label.new(bar_index, ylocValue, pattern, style=label.style_label_up, color=color.new(color.blue, 0), textcolor=color.white, size=size.tiny)

// Plot signals on the chart

// Doji signal (we plot at mid candle for doji)
plotLabel("Doji", doji, (high + low) / 2)

// Hammer / Hanging Man: color-code by context (hammer if in a downtrend, hanging man if in uptrend)
// For simplicity, here we just label them as "Hammer" when condition met.
plotLabel("Hammer", isHammer, low)
plotLabel("Inverted Hammer", isInvertedHammer, high)

// Engulfing patterns
plotLabel("Bull Engulf", bullishEngulfing, low)
plotLabel("Bear Engulf", bearishEngulfing, high)

// Piercing and Dark Cloud patterns
plotLabel("Piercing", piercing, low)
plotLabel("Dark Cloud", darkCloud, high)

// Morning and Evening Stars (we label at the star candle, i.e., bar_index-1)
if morningStar
    label.new(bar_index-1, (high[1] + low[1]) / 2, "Morning Star", style=label.style_label_up, color=color.new(color.green, 0), textcolor=color.white, size=size.tiny)
if eveningStar
    label.new(bar_index-1, (high[1] + low[1]) / 2, "Evening Star", style=label.style_label_down, color=color.new(color.red, 0), textcolor=color.white, size=size.tiny)

// Optionally, you can also plot shapes on the chart for quick visual reference
plotshape(doji, title="Doji", location=location.absolute, style=shape.circle, size=size.tiny, color=color.yellow, transp=0)
plotshape(isHammer, title="Hammer", location=location.belowbar, style=shape.triangleup, size=size.tiny, color=color.blue, transp=0)
plotshape(isInvertedHammer, title="Inverted Hammer", location=location.abovebar, style=shape.triangledown, size=size.tiny, color=color.purple, transp=0)
plotshape(bullishEngulfing, title="Bullish Engulfing", location=location.belowbar, style=shape.labelup, size=size.tiny, text="BE", color=color.green, transp=0)
plotshape(bearishEngulfing, title="Bearish Engulfing", location=location.abovebar, style=shape.labeldown, size=size.tiny, text="BE", color=color.red, transp=0)
plotshape(piercing, title="Piercing", location=location.belowbar, style=shape.labelup, size=size.tiny, text="Pierce", color=color.green, transp=0)
plotshape(darkCloud, title="Dark Cloud", location=location.abovebar, style=shape.labeldown, size=size.tiny, text="DCloud", color=color.red, transp=0)
plotshape(morningStar, title="Morning Star", location=location.belowbar, style=shape.arrowup, size=size.tiny, color=color.green, transp=0)
plotshape(eveningStar, title="Evening Star", location=location.abovebar, style=shape.arrowdown, size=size.tiny, color=color.red, transp=0)
